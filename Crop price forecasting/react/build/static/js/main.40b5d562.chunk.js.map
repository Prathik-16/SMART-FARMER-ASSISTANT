{"version":3,"sources":["logo.gif","Loading.js","App.js","index.js"],"names":["Loading","state","className","src","logo","alt","Component","App","crops","loading","a","cropdisplay","this","setState","id","map","item","index","value","CropName","toString","toUpperCase","options","chart","xaxis","categories","Date","stroke","curve","series","name","data","Price","PureComponent","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","theme","colors","primary","accent","document","getElementById"],"mappings":"uPAAe,MAA0B,iC,OCkB1BA,E,4MAdXC,MAAQ,G,4CACR,WACI,OACQ,qBAAKC,UAAU,QAAf,SACA,qBAAKA,UAAU,UAAf,SACA,qBAAKA,UAAU,gBAAf,SACA,qBAAKA,UAAU,cAAcC,IAAKC,EAAMC,IAAI,yB,GAPtCC,a,iBCqLPC,E,4MAjLbN,MAAQ,CACNO,MAAM,KACNC,SAAS,G,8FAET,4BAAAC,EAAA,sDAKkB,GAUhBC,EAAc,CACZ,CACI,SAAY,QACZ,KAAQ,CACJ,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAEJ,MAAS,CACL,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGR,CACI,SAAY,OACZ,KAAQ,CACJ,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAEJ,MAAS,CACL,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGR,CACI,SAAY,QACZ,KAAQ,CACJ,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAEJ,MAAS,CACL,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QAIVC,KAAKC,SAAS,CAACL,MAAMG,EAAYF,SAAS,IApH5C,gD,0EAuHF,WACE,OAAW,sBAAKP,UAAU,MAAf,UACV,oBAAIA,UAAU,YAAd,oCACM,qBAAKA,UAAU,GAAf,SACC,yBAASA,UAAU,UAAUY,GAAG,UAAhC,SACDF,KAAKX,MAAMQ,UAAYG,KAAKX,MAAMO,MAAQ,cAAC,EAAD,IACzC,6BACLI,KAAKX,MAAMO,MAAMO,KAAI,SAACC,EAAKC,GAC9B,OACE,qBAAgBC,MAAOF,EAAvB,UACI,8BACI,oBAAKd,UAAU,YAAf,SAA4Bc,EAAKG,SAASC,WAAWC,kBAE3D,cAAC,IAAD,CAECC,QAAS,CACVC,MAAO,CACLT,GAAIE,EAAKG,UAEXK,MAAO,CACLC,WAAYT,EAAKU,MAEnBC,OAAQ,CACNC,MAAO,WAIRC,OAAQ,CACP,CACEC,KAAMd,EAAKG,SACXY,KAAMf,EAAKgB,YArBRf,mB,GArIGgB,iB,uBCMZC,G,MAAS,IAAIC,KASnBC,IAASC,OACP,cAAC,WAAD,CAAmBnB,MAAOgB,EAAQI,MAbM,UAaQC,qBAAmB,EAAnE,SACE,eAAC,gBAAD,CAAeC,MATL,CACZC,OAAQ,CACNC,QAAS,SACTC,OAAQ,WAMR,UACA,cAAC,aAAD,IACA,cAAC,EAAD,SAGFC,SAASC,eAAe,W","file":"static/js/main.40b5d562.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.90cfcbfa.gif\";","import React,{Component} from 'react';\nimport logo from './logo.gif';\n\nclass Loading extends Component {\n    state = {  }\n    render() { \n        return (\n                <div className=\"modal\">\n                <div className=\"loading\">\n                <div className=\"bringitcenter\">\n                <img className=\"Loading_Img\" src={logo} alt=\"loading...\" />\n                </div>\n            </div>\n            </div>\n         );\n    }\n}\n \nexport default Loading ;","\nimport React, { PureComponent } from 'react';\nimport Loading from './Loading';\nimport Chart from \"react-apexcharts\";\n\n\nclass App extends PureComponent {\n  state = {\n    crops:null,\n    loading: true\n    }\n    async componentDidMount(){\n      // const url = \"http://localhost:8080/cpp/file/list\";\n      // const res = await fetch(url);\n      // var crop = await res.json();\n      // crop = JSON.parse(JSON.stringify(crop));\n      var cropdisplay=[]\n      // for(var key in crop)\n      // {var dates =[]\n      //  var price = []\n      // crop[key].forEach(element => {\n      // dates.push(element.Date)\n      // price.push(parseInt(element.Approx_price))\n      // });\n      // cropdisplay.push({CropName:key,Date:dates,Price:price})\n      // }\n      cropdisplay = [\n        {\n            \"CropName\": \"wheat\",\n            \"Date\": [\n                \"2021-08-01\",\n                \"2021-09-01\",\n                \"2021-10-01\",\n                \"2021-11-01\",\n                \"2021-12-01\",\n                \"2022-01-01\",\n                \"2022-02-01\",\n                \"2022-03-01\",\n                \"2022-04-01\",\n                \"2022-05-01\",\n                \"2022-06-01\",\n                \"2022-07-01\",\n                \"2022-08-01\"\n            ],\n            \"Price\": [\n                2996,\n                3023,\n                3013,\n                3109,\n                3094,\n                3127,\n                3140,\n                3115,\n                3117,\n                3077,\n                3071,\n                3117,\n                3101\n            ]\n        },\n        {\n            \"CropName\": \"rice\",\n            \"Date\": [\n                \"2021-08-01\",\n                \"2021-09-01\",\n                \"2021-10-01\",\n                \"2021-11-01\",\n                \"2021-12-01\",\n                \"2022-01-01\",\n                \"2022-02-01\",\n                \"2022-03-01\",\n                \"2022-04-01\",\n                \"2022-05-01\",\n                \"2022-06-01\",\n                \"2022-07-01\",\n                \"2022-08-01\"\n            ],\n            \"Price\": [\n                6333,\n                5470,\n                5538,\n                5797,\n                5204,\n                6476,\n                7794,\n                8840,\n                7086,\n                5791,\n                6769,\n                7274,\n                6723\n            ]\n        },\n        {\n            \"CropName\": \"paddy\",\n            \"Date\": [\n                \"2021-08-01\",\n                \"2021-09-01\",\n                \"2021-10-01\",\n                \"2021-11-01\",\n                \"2021-12-01\",\n                \"2022-01-01\",\n                \"2022-02-01\",\n                \"2022-03-01\",\n                \"2022-04-01\",\n                \"2022-05-01\",\n                \"2022-06-01\",\n                \"2022-07-01\",\n                \"2022-08-01\"\n            ],\n            \"Price\": [\n                1813,\n                1853,\n                1818,\n                1766,\n                1802,\n                1835,\n                1873,\n                1870,\n                1852,\n                1779,\n                1805,\n                1845,\n                1877\n            ]\n        }\n    ]\n      this.setState({crops:cropdisplay,loading: false});\n    } \n  \n  render() { \n    return (   <div className=\"App\">   \n     <h1 className=\"heading01\">Crop Price Forecasting</h1> \n           <div className=\"\">\n            <section className=\"webpage\" id=\"webpage\">\n          {this.state.loading || !this.state.crops ? <Loading />: \n            <ul>\n      {this.state.crops.map((item,index) =>{\n    return(\n      <li key={index} value={item}>\n          <div>\n              <h3  className=\"heading01\">{item.CropName.toString().toUpperCase()}</h3>\n          </div>\n        <Chart\n         \n         options={{\n        chart: {\n          id: item.CropName\n        },\n        xaxis: {\n          categories: item.Date\n        },\n        stroke: {\n          curve: 'smooth',\n        }\n         }\n        }\n         series={[\n          {\n            name: item.CropName,\n            data: item.Price\n          }\n        ]\n         }\n         >\n\n        </Chart>\n\n\n\n      </li >\n        )\n    })}\n             \n            </ul>\n  } \n        </section>\n      </div> \n    \n</div> );\n  }\n}\n\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { ThemeProvider,StyleReset } from 'atomize';\nimport \"./App.css\"\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\nconst theme = {\n  colors: {\n    primary: 'tomato',\n    accent: 'yellow',\n  },\n};\n\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <ThemeProvider theme={theme}>\n    <StyleReset/>\n    <App />\n    </ThemeProvider>\n  </StyletronProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}